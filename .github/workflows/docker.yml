on: [push, workflow_dispatch]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    outputs:
      meta: ${{ steps.meta.outputs.json }}
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=registry,ref=${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          cache-to: type=inline
          no-cache: ${{ github.event_name == 'workflow_dispatch' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    env:
      IMAGE: ${{ fromJSON(needs.build-and-push-image.outputs.meta).tags[0] }} # ex. "ghcr.io/thewapp/og-image:main"
    steps:
      - name: Pull docker image
        run: docker pull "$IMAGE"
      - name: Run app
        run: docker run -d -p 8080:8080 "$IMAGE"
      - name: Test / for 403
        run: |
          # Retry every 1 second for 20 times
          for n in $(seq 1 20)
          do
            echo "Trying $n"
            test $(curl -sw "%{http_code}" localhost:8080) = "403" && echo "403" && exit 0
            sleep 1
          done
          exit 1

  build-and-test-image:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Extract main metadata (tags, labels) for Docker
        id: main-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.repository.default_branch }}
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=${{ fromJSON(steps.main-meta.outputs.json).tags[0] }}
          tags: ${{ steps.meta.outputs.tags }}
      - name: Run app
        run: docker run -d -p 8080:8080 "$IMAGE"
        env:
          IMAGE: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
      - name: Test / for 403
        run: |
          # Retry every 1 second for 20 times
          for n in $(seq 1 20)
          do
            echo "Trying $n"
            test $(curl -sw "%{http_code}" localhost:8080) = "403" && echo "403" && exit 0
            sleep 1
          done
          exit 1
